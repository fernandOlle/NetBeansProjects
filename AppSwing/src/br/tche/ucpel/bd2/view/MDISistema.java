/*
 * MDISistema.java
 *
 * Created on September 23, 2008, 10:14 AM
 */
package br.tche.ucpel.bd2.view;

import br.tche.ucpel.bd2.util.Conexao;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JOptionPane;

/**
 * Classe principal, de onde a aplicação inicia.
 * <br/>
 * No evento de WindowOpened (abertura da janela) o sistema faz a conexão com o
 * SGBD. No evento de WindowClosing o sistema fecha a conexão com o SGBD.
 *
 * @author mertins
 */
public class MDISistema extends javax.swing.JFrame {

    private FormAluno formAluno;
    private FormFuncionario formFuncionario;
    private FormDepartamento formDepartamento;
    private static Connection conexao;

    /**
     * Creates new form MDISistema
     */
    public MDISistema() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        Cadastros = new javax.swing.JMenu();
        mnDepartamento = new javax.swing.JMenuItem();
        mnFuncionario = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        mnAluno = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        exitMenuItem = new javax.swing.JMenuItem();
        mnAjuda = new javax.swing.JMenu();
        mnSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fundamentos em Banco de Dados");
        setIconImage(new ImageIcon(MDISistema.class.getResource("/br/tche/ucpel/imagens/ucpel.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Cadastros.setText("Cadastros");

        mnDepartamento.setText("Departamento");
        mnDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnDepartamentoActionPerformed(evt);
            }
        });
        Cadastros.add(mnDepartamento);

        mnFuncionario.setText("Funcionario");
        mnFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFuncionarioActionPerformed(evt);
            }
        });
        Cadastros.add(mnFuncionario);
        Cadastros.add(jSeparator2);

        mnAluno.setText("Aluno");
        mnAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAlunoActionPerformed(evt);
            }
        });
        Cadastros.add(mnAluno);

        jMenuItem2.setText("Disciplina");
        Cadastros.add(jMenuItem2);

        jMenuItem3.setText("Matricula do Aluno");
        Cadastros.add(jMenuItem3);
        Cadastros.add(jSeparator1);

        exitMenuItem.setText("Sair");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        Cadastros.add(exitMenuItem);

        menuBar.add(Cadastros);

        mnAjuda.setText("Ajuda");
        mnAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAjudaActionPerformed(evt);
            }
        });

        mnSobre.setText("Sobre");
        mnSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSobreActionPerformed(evt);
            }
        });
        mnAjuda.add(mnSobre);

        menuBar.add(mnAjuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 873, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(889, 599));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed


private void mnDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnDepartamentoActionPerformed
// TODO add your handling code here:
    if (this.formDepartamento == null) {
        this.formDepartamento = new FormDepartamento(this);
        this.desktopPane.add(this.formDepartamento);
    }
    this.openJanela(this.formDepartamento);

}//GEN-LAST:event_mnDepartamentoActionPerformed

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    try {
        MDISistema.conexao = Conexao.get();
        FormLogin dialog = new FormLogin(this, true);
        dialog.setVisible(true);
    } catch (SQLException ex) {
        JOptionPane.showInternalMessageDialog(this.desktopPane, String.format("Erro ao conectar ao SGBD: %s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(MDISistema.class.getName()).log(Level.SEVERE, null, ex);
        System.exit(1);
    } catch (ClassNotFoundException ex) {
        JOptionPane.showInternalMessageDialog(this.desktopPane, "Erro ao carregar o Drive do SGBD", "Erro", JOptionPane.ERROR_MESSAGE);
        Logger.getLogger(MDISistema.class.getName()).log(Level.SEVERE, null, ex);
        System.exit(2);
    }
}//GEN-LAST:event_formWindowOpened

private void mnFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFuncionarioActionPerformed
// TODO add your handling code here:
    if (this.formFuncionario == null) {
        this.formFuncionario = new FormFuncionario(this);
        this.desktopPane.add(this.formFuncionario);
    }
    this.openJanela(this.formFuncionario);
}//GEN-LAST:event_mnFuncionarioActionPerformed

private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    try {
        conexao.close();
    } catch (SQLException ex) {
        Logger.getLogger(MDISistema.class.getName()).log(Level.SEVERE, null, ex);
    } catch (NullPointerException ex) {
    }
}//GEN-LAST:event_formWindowClosing

private void mnAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAjudaActionPerformed
// TODO add your handling code here:

}//GEN-LAST:event_mnAjudaActionPerformed

private void mnSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSobreActionPerformed
// TODO add your handling code here:
    JOptionPane.showMessageDialog(this, "Protótipo para exemplificar conteúdo \nde Laboratório de Programação I\nENGC/UCPel\n\nProf.: Luciano Edson Mertins", "Protótipo Cadastros Swing", JOptionPane.INFORMATION_MESSAGE);
}//GEN-LAST:event_mnSobreActionPerformed

    private void mnAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAlunoActionPerformed
        // TODO add your handling code here:
        if (this.formAluno == null) {
            this.formAluno = new FormAluno(this);
            this.desktopPane.add(this.formAluno);
        }
        this.openJanela(this.formAluno);

    }//GEN-LAST:event_mnAlunoActionPerformed

    private void openJanela(JComponent obj) {
        if (!obj.isVisible()) {
            if (!obj.isValid()) {
                desktopPane.add(obj);
            }

            obj.setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDISistema().setVisible(true);
            }
        });
    }

    /**
     * Retorna a conexão com a base de dados, realizada na abertura do MDI
     *
     * @return Conexão JDBC pronta
     */
    public static Connection getConexao() {
        return conexao;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Cadastros;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu mnAjuda;
    private javax.swing.JMenuItem mnAluno;
    private javax.swing.JMenuItem mnDepartamento;
    private javax.swing.JMenuItem mnFuncionario;
    private javax.swing.JMenuItem mnSobre;
    // End of variables declaration//GEN-END:variables

}
